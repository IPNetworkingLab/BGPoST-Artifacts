router id 0.0.0.5;

# log "/tmp/node004.bird.log" all;
# debug protocols all;

protocol device {}

protocol direct {
  ipv4;			# Connect to default IPv4 table
  ipv6;			# ... and to default IPv6 table
}

protocol kernel {
  learn;
  ipv4 {
    export all;
    import all;
  };
}

protocol kernel {
  learn yes;
  ipv6 {
    export all;
    import all;
  };
}

protocol static {
  ipv4;
  route 192.0.2.1/32 blackhole;
}


filter bgp_in {
  # black hole community
  if net ~ [ 192.0.2.1/32 ] then reject;
  else if (65005, 666) ~ bgp_community then {
     bgp_next_hop=192.0.2.1;
     bgp_local_pref=400;
     dest = RTD_BLACKHOLE;
     #bgp_community = -empty-;
     bgp_community.add((65535, 65281)); # no export
     #gw = 192.0.2.1;
     accept;
  } else accept;
}

filter bgp_out_ibgp {
  if net ~ [ 192.0.2.1/32 ] then reject;
  else if (65005,666) ~ bgp_community then {
    # next hop self overrides the one set in import
    bgp_community.delete((65005,666));
    bgp_next_hop=192.0.2.1;
    dest = RTD_BLACKHOLE;
    accept;
  } else if bgp_next_hop ~ [ 192.0.2.1 ] then {
    # RTBH already processed
    accept;
  } else {
    # next hop self (to not override 192.0.2.1)
    bgp_next_hop=10.0.0.8;
    accept;
  }
}

filter bgp_out {
  if net ~ [ 192.0.2.1/32 ] then reject;
  else accept;
}

filter only_rtbh_trigger {
  if (65005,666) ~ bgp_community then {
    bgp_community = -empty-;
    bgp_community.add((65535, 65281));
    bgp_local_pref = 900;
    bgp_next_hop = 192.0.2.1;
    dest = RTD_BLACKHOLE;
    accept;
  } else reject;
}

protocol bgp node003_0_v4 {
  local 10.0.0.7 as 65004;
  neighbor 10.0.0.6 as 65003;
  hold time 240;

  transport quic;
  certificate "/tmp/quic_exp/certs/node004.cert.pem";
  key "/tmp/quic_exp/certs/node004.key";
  alpn "BGP4";
  remote sni "node003";
  tls_insecure on;
 
  ipv4 {
    import filter bgp_in;
    export filter bgp_out;
  }; 
}

protocol bgp node003_0_v6 {
  local fc01::7 as 65004;
  neighbor fc01::6 as 65003;
  hold time 240;

  transport quic;
  certificate "/tmp/quic_exp/certs/node004.cert.pem";
  key "/tmp/quic_exp/certs/node004.key";
  alpn "BGP4";
  remote sni "node003";
  tls_insecure on;
  
  ipv6 {
    import all;
    export filter bgp_out;
  };
}

protocol bgp node005_0_v4 {  
  local 10.0.0.8 as 65004;
  neighbor 10.0.0.9 as 65004;
  hold time 240;

  transport quic;
  certificate "/tmp/quic_exp/certs/node004.cert.pem";
  key "/tmp/quic_exp/certs/node004.key";
  alpn "BGP4";
  remote sni "node005";
  tls_insecure on;

  ipv4 {
    import all;
    export filter bgp_out_ibgp;
    #next hop self;
  };
}

protocol bgp node005_0_v6 {
  local fc01::8 as 65004;
  neighbor fc01::9 as 65004;
  hold time 240;

  transport quic;
  certificate "/tmp/quic_exp/certs/node004.cert.pem";
  key "/tmp/quic_exp/certs/node004.key";
  alpn "BGP4";
  remote sni "node005";
  tls_insecure on;

  ipv6 {
    import all;
    export filter bgp_out;
    next hop self; 
  };
}

protocol bgp node001_0_v4 {
  local 10.0.0.7 as 65004;
  neighbor 10.0.0.2 as 65001;
  hold time 240;
  passive;
  multihop;

  transport quic;
  certificate "/tmp/quic_exp/certs/node004.cert.pem";
  key "/tmp/quic_exp/certs/node004.key";
  alpn "BGP4";
  remote sni "node001";
  tls_insecure on;

  ipv4 {
    import filter only_rtbh_trigger;
    export none;
  };
}
