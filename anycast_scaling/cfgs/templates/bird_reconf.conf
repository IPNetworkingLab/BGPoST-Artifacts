{% if not no_bgp %}
### {{node}} config

mrtdump "{{work_dir}}/{{node}}/{{node}}.mrt";
mrtdump protocols { messages };
mrtdump extended_timestamp;

log "{{ work_dir if work_dir else '/dev/shm/test_perf' }}/{{node}}/{{node}}.log" { trace, info, remote, warning, error, auth, fatal, bug };

router id {{rid}};

{% if enable_control_srv %}
control socket "{{work_dir}}/{{node}}/{{node}}.ctrl_serv.sk";
{% endif %}

protocol device {

}

protocol direct {
  ipv4;
  ipv6;
  interface "eth*"{% if import_lo %}, "lo"{% endif %};
}

protocol kernel {
  ipv4 {
    export all;
  };
}

protocol kernel {
  ipv6 {
    export all;
  };
}

# @@@ FILTER CERT

{% if neighbors %}{% for peer, cfg in neighbors.items() %}
{{ '# @@@ BEGIN ANYCAST PEER @@@' if cfg.anycast else '' }}
protocol bgp {{peer}} {
  description "{{peer}} session";
  local {{cfg.local.v4}} {% if cfg.local.port %} port {{ cfg.local.port }} {% endif %} as {{asn}};
  neighbor {{cfg.neighbor.v4}} {% if cfg.neighbor.port %} port {{ cfg.neighbor.port }} {% endif %} as {{cfg.neighbor.asn}};
  hold time {{ cfg.hold_time if cfg.hold_time else 90 }};
  strict bind on;
  {% if cfg.passive %}passive on;{% endif %}

  transport tls;
  tls certificate "{{ work_dir }}/{{node}}/{{node}}.cert.pem";
  tls root ca "{{ work_dir }}/ca.cert.pem";
  tls pkey "{{ work_dir }}/{{node}}/{{node}}.key";
  tls peer sni "{{peer}}.rtr";
  tls local sni "{{node}}.rtr";

  {{ '# @@@ BEGIN ANYCAST ' + peer + ' IPV4 TABLE @@@' if cfg.anycast else '' }}
  ipv4 {
    import table on; # enable Adj-RIB-In
    import {{ 'none' if cfg.no_export else 'all' }};
    export {{ 'none' if cfg.no_export else 'all' }};
  };
  {{ '# @@@ END ANYCAST ' + peer + ' IPV4 TABLE @@@' if cfg.anycast else '' }}

  ipv6 {
    import table on; # enable Adj-RIB-In
    import {{ 'none' if cfg.no_export else 'all' }};
    export {{ 'none' if cfg.no_export else 'all' }};
  };
}
{{ '# @@@ END ANYCAST PEER @@@' if cfg.anycast else '' }}
{% endfor %}{% endif %}
{% endif %}{# end if no bgp #}
