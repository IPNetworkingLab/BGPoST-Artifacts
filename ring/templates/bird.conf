### {{node}} config

log "{{ work_dir if work_dir else '/dev/shm/test_perf' }}/{{node}}/{{node}}.log" { trace, info, remote, warning, error, auth, fatal, bug };

router id {{rid}};

{% block mrt scoped %}
{% if enable_mrt %}
mrtdump "/dev/shm/test_perf/{{node}}/{{node}}.mrt";
mrtdump protocols { messages };
mrtdump extended_timestamp on;
{% endif %}
{% endblock %}

protocol device {

}

protocol direct {
  disabled;
  ipv4;
  ipv6;
}

protocol kernel {
  ipv4 {
    export none;
  };
}

protocol kernel {
  ipv6 {
    export none;
  };
}
{% if neighbors %}{% for peer, cfg in neighbors.items() %}
# {{cfg.direction}}
protocol bgp {{peer}} {
  description "{{peer}} {{cfg.direction}} session";
  local {{cfg.local.v4}} {% if cfg.local.port %} port {{ cfg.local.port }} {% endif %} as {{asn}};
  neighbor {{cfg.neighbor.v4}} {% if cfg.neighbor.port %} port {{ cfg.neighbor.port }} {% endif %} as {{cfg.neighbor.asn}};
  hold time {{ cfg.hold_time if cfg.hold_time else 90 }};
  strict bind on;
  {% if cfg.passive %}passive on;
  {% elif cfg.direction == 'upstream' %}passive on;{% endif %}
  {% if not cfg.vanilla_session %}
  {% block transport scoped %}
  {% endblock %}
  {% endif %}
  ipv4 {
    import {{'none' if cfg.direction == 'downstream' else 'all'}};
    export {{'all' if cfg.direction == 'downstream' else 'none'}};
  };

  ipv6 {
    import {{'none' if cfg.direction == 'downstream' else 'all'}};
    export {{'all' if cfg.direction == 'downstream' else 'none'}};
  };
}
{% endfor %}{% endif %}
